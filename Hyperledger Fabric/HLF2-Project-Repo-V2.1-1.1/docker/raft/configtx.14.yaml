# configtx
# Used for setting up the Phase-3 of Airline Nw on the cloud

#   CAPABILITIES
Capabilities:
  Application: &ApplicationCapabilities
    V1_3: true
  Orderer: &OrdererCapabilities
    V1_1: true
  Channel: &ChannelCapabilities
    V1_3: true

# ORGANIZATIONS
Organizations:
  - &Orderer
    Name: Orderer
    ID: OrdererMSP
    MSPDir: ../config/crypto-config/ordererOrganizations/acme.com/msp
    Policies: &OrdererPolicies
      Readers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('OrdererMSP.admin')"

  - &Acme
    Name: Acme
    ID: AcmeMSP
    MSPDir: ../config/crypto-config/peerOrganizations/acme.com/msp
    Policies: &AcmePolicies
      Readers:
          Type: Signature
          Rule: "OR('AcmeMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('AcmeMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('AcmeMSP.admin')"
    AnchorPeers:
      - Host: peer1.acme.com
        Port: 7051
      # You may add additional hosts here

  # Added by the Administrator
  - &Budget
    Name: Budget
    ID: BudgetMSP
    MSPDir: ../config/crypto-config/peerOrganizations/budget.com/msp
    Policies: &BudgetPolicies
      Readers:
          Type: Signature
          Rule: "OR('BudgetMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('BudgetMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('BudgetMSP.admin')"
    AnchorPeers:
      - Host: peer1.budget.com
        Port: 7051
      # You may add additional hosts here

  
# ORDERER
Orderer: &OrdererDefaults

  # Change the Orderer type to etcdraft
  OrdererType: etcdraft

  Addresses:
    - orderer.acme.com:7050

    # Policies for Orderer
  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta  
        Rule: "MAJORITY Admins"

    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
        Type: ImplicitMeta
        Rule: "ANY Writers"
  # EtcdRaft defines configuration which must be set when the "etcdraft"
  # orderertype is chosen.
  EtcdRaft:
      # The set of Raft replicas for this network. For the etcd/raft-based
      # implementation, we expect every replica to also be an OSN. Therefore,
      # a subset of the host:port items enumerated in this list should be
      # replicated under the Orderer.Addresses key above.
      Consenters:
          - Host: orderer.acme.com
            Port: 7050
            ClientTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer.acme.com/tls/server.crt
            ServerTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer.acme.com/tls/server.crt
          - Host: orderer2.acme.com
            Port: 7050
            ClientTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer2.acme.com/tls/server.crt
            ServerTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer2.acme.com/tls/server.crt
          - Host: orderer3.acme.com
            Port: 7050
            ClientTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer3.acme.com/tls/server.crt
            ServerTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer3.acme.com/tls/server.crt

          # Additional Orderers go here
          - Host: orderer4.acme.com
            Port: 7050
            ClientTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer4.acme.com/tls/server.crt
            ServerTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer4.acme.com/tls/server.crt
          - Host: orderer5.acme.com
            Port: 7050
            ClientTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer5.acme.com/tls/server.crt
            ServerTLSCert: ../config/crypto-config/ordererOrganizations/acme.com/orderers/orderer5.acme.com/tls/server.crt

      # Options to be specified for all the etcd/raft nodes. The values here
      # are the defaults for all new channels and can be modified on a
      # per-channel basis via configuration updates.
      Options:
          # TickInterval is the time interval between two Node.Tick invocations.
          TickInterval: 500ms

          # ElectionTick is the number of Node.Tick invocations that must pass
          # between elections. That is, if a follower does not receive any
          # message from the leader of current term before ElectionTick has
          # elapsed, it will become candidate and start an election.
          # ElectionTick must be greater than HeartbeatTick.
          ElectionTick: 10

          # HeartbeatTick is the number of Node.Tick invocations that must
          # pass between heartbeats. That is, a leader sends heartbeat
          # messages to maintain its leadership every HeartbeatTick ticks.
          HeartbeatTick: 1

          # MaxInflightBlocks limits the max number of in-flight append messages
          # during optimistic replication phase.
          MaxInflightBlocks: 5

          # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
          SnapshotIntervalSize: 20 MB
  # Batch Timeout: The amount of time to wait before creating a batch
  BatchTimeout: 2s

  # Batch Size: Controls the number of messages batched into a block
  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 98 MB
    PreferredMaxBytes: 512 KB



  Capabilities:
    <<: *OrdererCapabilities

Application: &ApplicationDefaults

  ACLs: &ACLsDefault
    
    # ACL policy for lscc's "getid" function
    lscc/ChaincodeExists: /Channel/Application/Readers

    # ACL policy for lscc's "getdepspec" function
    lscc/GetDeploymentSpec: /Channel/Application/Readers

    # ACL policy for lscc's "getccdata" function
    lscc/GetChaincodeData: /Channel/Application/Readers

    # ACL Policy for lscc's "getchaincodes" function
    #    lscc/GetInstantiatedChaincodes: /Channel/Application/Readers
    lscc/GetInstantiatedChaincodes: /Channel/Application/StrictAdminPolicy

    #---Query System Chaincode (qscc) function to policy mapping for access control---#

    # ACL policy for qscc's "GetChainInfo" function
    # qscc/GetChainInfo: /Channel/Application/Readers
    qscc/GetChainInfo: /Channel/Application/StrictAdminPolicy

    # ACL policy for qscc's "GetBlockByNumber" function
    qscc/GetBlockByNumber: /Channel/Application/Readers

    # ACL policy for qscc's  "GetBlockByHash" function
    qscc/GetBlockByHash: /Channel/Application/Readers

    # ACL policy for qscc's "GetTransactionByID" function
    qscc/GetTransactionByID: /Channel/Application/Readers

    # ACL policy for qscc's "GetBlockByTxID" function
    qscc/GetBlockByTxID: /Channel/Application/Readers

    #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

    # ACL policy for cscc's "GetConfigBlock" function
    cscc/GetConfigBlock: /Channel/Application/Readers

    # ACL policy for cscc's "GetConfigTree" function
    cscc/GetConfigTree: /Channel/Application/Readers

    # ACL policy for cscc's "SimulateConfigTreeUpdate" function
    cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

    #---Miscellanesous peer function to policy mapping for access control---#

    # ACL policy for invoking chaincodes on peer
    peer/Propose: /Channel/Application/Writers

    # ACL policy for chaincode to chaincode invocation
    peer/ChaincodeToChaincode: /Channel/Application/Readers

    #---Events resource to policy mapping for access control###---#

    # ACL policy for sending block events
    event/Block: /Channel/Application/Readers

    # ACL policy for sending filtered block events
    event/FilteredBlock: /Channel/Application/Readers

  # Default policies
  Policies: &ApplicationDefaultPolicies
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        Rule: "MAJORITY Admins"

    StrictAdminPolicy:
        Type: ImplicitMeta
        Rule: "ANY Admins"
 
  Organizations:

  Capabilities:
    <<: *ApplicationCapabilities
 

#   CHANNEL
Channel: &ChannelDefaults
  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        # Any admin can create a channel - if changed to MAJORITY then both orgs needed for creation
        Rule: "ANY Admins"

  Capabilities:

  
#   PROFILES
Profiles:

  AirlineOrdererGenesis:
      <<: *ChannelDefaults
      Orderer:
          <<: *OrdererDefaults
          Organizations:
              - <<: *Orderer


      Application:
            <<: *ApplicationDefaults

            Organizations:
                - <<: *Acme               
                - <<: *Budget

      Consortiums:

        AirlineConsortium:
            
            Organizations:
                  - <<: *Acme                               
                  - <<: *Budget
                  
  AirlineChannel:
    <<: *ChannelDefaults
    Consortium: AirlineConsortium
        
    Application:
        <<: *ApplicationDefaults
        
        Organizations:
            - <<: *Acme
            - <<: *Budget
